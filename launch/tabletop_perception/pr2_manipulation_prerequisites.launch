<launch>
  <arg name="use_right_arm" default="true" />
  <arg name="use_left_arm" default="true" />
  <arg name="stereo" default="false"/>
  <arg name="do_preplan_scan" default="false" />
  <arg name="do_monitoring" default="false" />
  <arg name="kinect_frame_prefix" default="" />
  <arg name="kinect_camera_name" default="kinect_rgb" />
  <arg name="log_to_warehouse" default="false" />
  <arg name="sim" default="false" />
  <arg name="tod" default="false" />
  <arg name="use_octomap_filtering" default="false" />

  <include unless="$(arg stereo)" file="$(find openni_launch)/launch/kinect_frames.launch" />

  <!-- load perception -->
  <!-- this launch file was moved inside this package in order to change laser settings -->
  <include file="$(find ros_launches)/launch/arm_navigation/laser-perception.launch">
    <arg name="use_right_arm" value="$(arg use_right_arm)"/>
    <arg name="use_left_arm" value="$(arg use_left_arm)"/>
    <arg name="use_octomap_filtering" value="$(arg use_octomap_filtering)"/>
  </include>

  <!-- load planning -->
  <include file="$(find ros_launches)/launch/arm_navigation/ompl_planning.launch">
    <arg name="use_right_arm" value="$(arg use_right_arm)" />
    <arg name="use_left_arm" value="$(arg use_left_arm)" />
  </include>

  <!-- load move_arm -->
  <include file="$(find ros_launches)/launch/arm_navigation/move_left_arm.launch"/>
  <include file="$(find ros_launches)/launch/arm_navigation/move_right_arm.launch"/>

  <!-- load move_arm_head_monitor -->
  <node pkg="move_arm_head_monitor" type="move_arm_head_monitor" name="head_monitor" output="screen" machine="c2">
     <remap from="cloud_in" to="/narrow_stereo_textured/points2_filtered_attached" />
     <param name="do_preplan_scan" value="$(arg do_preplan_scan)"/>
     <param name="do_monitoring" value="$(arg do_monitoring)"/>
     <param name="use_left_arm" value="$(arg use_left_arm)"/>
     <param name="use_right_arm" value="$(arg use_right_arm)"/>
  </node>

  <!-- load planning_environment -->
  <include file="$(find ros_launches)/launch/arm_navigation/environment_server.launch">
    <arg name="use_monitor" value="true"/>
    <arg name="use_collision_map" value="true"/>
  </include>

  <!-- load controllers -->
  <include file="$(find ros_launches)/launch/arm_navigation/trajectory_filter.launch"/>
  <param name="trajectory_filter/object_padd" value="0.04"/>

  <!-- load ik -->
  <include if="$(arg use_right_arm)" file="$(find ros_launches)/launch/arm_navigation/right_arm_collision_free_ik.launch"/>
  <include if="$(arg use_left_arm)"  file="$(find ros_launches)/launch/arm_navigation/left_arm_collision_free_ik.launch"/>
  <param name="pr2_right_arm_kinematics/object_padd" value="0.04"/>
  <param name="pr2_left_arm_kinematics/object_padd" value="0.04"/>

  <!--trigger mode 3 is on, 4 is off, 5 is alternate projector-->
  <node if="$(arg stereo)"
	name="dynamic_reconfigure_stereo" pkg="dynamic_reconfigure" type="dynparam"
	args="set camera_synchronizer_node '{'projector_mode': 3, 'narrow_stereo_trig_mode': 5, 'wide_stereo_trig_mode': 4}' "/>
  
  <node unless="$(arg stereo)"
	name="projector_off" pkg="dynamic_reconfigure" type="dynparam"
	args="set camera_synchronizer_node projector_mode 1"/>
  
  <!--
  --> 
  <node name="change_narrow_stereo_params" pkg="dynamic_reconfigure" type="dynparam"
    args="set /narrow_stereo_textured/narrow_stereo_textured_proc '{'min_disparity': 16, 'speckle_size': 500}'" />

  <!-- interpolated IK -->
  <node  if="$(arg use_right_arm)" name="interpolated_ik_node_right" pkg="interpolated_ik_motion_planner" 
    type="interpolated_ik_motion_planner.py" args="r" respawn="false" machine="c2"/>
  <node if="$(arg use_left_arm)" name="interpolated_ik_node_left" pkg="interpolated_ik_motion_planner" 
    type="interpolated_ik_motion_planner.py" args="l" respawn="false" machine="c2"/>

  <!-- joint trajectory normalization -->
  <include file="$(find trajectory_filter_server)/launch/trajectory_unnormalize.launch"/>

</launch>
